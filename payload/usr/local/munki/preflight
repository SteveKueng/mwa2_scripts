#!/usr/bin/env python

import sys
import subprocess
import plistlib
import requests

from mwa2 import utils

def get_hardware_info():
    '''Uses system profiler to get hardware info for this machine'''
    cmd = ['/usr/sbin/system_profiler', 'SPHardwareDataType', '-xml']
    proc = subprocess.Popen(cmd, shell=False, bufsize=-1,
                            stdin=subprocess.PIPE,
                            stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    (output, dummy_error) = proc.communicate()
    try:
        plist = plistlib.readPlistFromString(output)
        # system_profiler xml is an array
        sp_dict = plist[0]
        items = sp_dict['_items']
        sp_hardware_dict = items[0]
        return sp_hardware_dict
    except BaseException:
        return {}

def check_mdm():
    '''recheck mdm'''
    cmd = ['/usr/libexec/mdmclient', 'nop']
    proc = subprocess.Popen(cmd, shell=False, bufsize=-1,
                            stdin=subprocess.PIPE,
                            stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    (output, dummy_error) = proc.communicate()

def main():
    """ main """
    RUNTYPE = "unknown"
    if len(sys.argv) == 2:
        RUNTYPE = sys.argv[1]

    serialNumber = get_hardware_info().serial_number
    clientName = utils.get_comnputer_name()

    url = "/api/report/"+serialNumber
    data = {"runtype": RUNTYPE, "submission_type": "preflight", "name": clientName}

    try:
        check_mdm()
    except Exception as error:
        print "mdm check error: %s" % error
        pass

    try:
        resc = utils.send_data(url, data)
        if resc.status_code != 204:
            print "send data error: %s" % resc.status_code
    except requests.ConnectionError as error:
        print error
    except Exception as error:
        print "unknow error: %s" % error

if __name__ == "__main__":
    main()
